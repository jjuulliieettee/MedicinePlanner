// <auto-generated />
using System;
using MedicinePlanner.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicinePlanner.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("MedicinePlanner.Data.Models.FoodRelation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FoodRelations");
                });

            modelBuilder.Entity("MedicinePlanner.Data.Models.FoodSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MedicineScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberOfMeals")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeOfFirstMeal")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MedicineScheduleId");

                    b.ToTable("FoodSchedules");
                });

            modelBuilder.Entity("MedicinePlanner.Data.Models.Medicine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActiveSubstance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dosage")
                        .HasColumnType("int");

                    b.Property<int?>("FoodInterval")
                        .HasColumnType("int");

                    b.Property<int>("FoodRelationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTakes")
                        .HasColumnType("int");

                    b.Property<int>("PharmaceuticalFormId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodRelationId");

                    b.HasIndex("PharmaceuticalFormId");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("MedicinePlanner.Data.Models.MedicineSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MedicineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("UserId");

                    b.ToTable("MedicineSchedules");
                });

            modelBuilder.Entity("MedicinePlanner.Data.Models.PharmaceuticalForm", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PharmaceuticalForms");
                });

            modelBuilder.Entity("MedicinePlanner.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Calendar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MedicinePlanner.Data.Models.FoodSchedule", b =>
                {
                    b.HasOne("MedicinePlanner.Data.Models.MedicineSchedule", "MedicineSchedule")
                        .WithMany("FoodSchedules")
                        .HasForeignKey("MedicineScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicineSchedule");
                });

            modelBuilder.Entity("MedicinePlanner.Data.Models.Medicine", b =>
                {
                    b.HasOne("MedicinePlanner.Data.Models.FoodRelation", "FoodRelation")
                        .WithMany("Medicine")
                        .HasForeignKey("FoodRelationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicinePlanner.Data.Models.PharmaceuticalForm", "PharmaceuticalForm")
                        .WithMany("Medicine")
                        .HasForeignKey("PharmaceuticalFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodRelation");

                    b.Navigation("PharmaceuticalForm");
                });

            modelBuilder.Entity("MedicinePlanner.Data.Models.MedicineSchedule", b =>
                {
                    b.HasOne("MedicinePlanner.Data.Models.Medicine", "Medicine")
                        .WithMany("MedicineSchedules")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicinePlanner.Data.Models.User", "User")
                        .WithMany("MedicineSchedules")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MedicinePlanner.Data.Models.FoodRelation", b =>
                {
                    b.Navigation("Medicine");
                });

            modelBuilder.Entity("MedicinePlanner.Data.Models.Medicine", b =>
                {
                    b.Navigation("MedicineSchedules");
                });

            modelBuilder.Entity("MedicinePlanner.Data.Models.MedicineSchedule", b =>
                {
                    b.Navigation("FoodSchedules");
                });

            modelBuilder.Entity("MedicinePlanner.Data.Models.PharmaceuticalForm", b =>
                {
                    b.Navigation("Medicine");
                });

            modelBuilder.Entity("MedicinePlanner.Data.Models.User", b =>
                {
                    b.Navigation("MedicineSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
